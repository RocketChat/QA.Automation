name: CI

on:
  push:
    branches:
      - ci

jobs:
  test:
    name: Running end to end tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: ["RemoteChrome", "RemoteSafari", "RemoteIE"]

    services:
      rocketchat:
        image: ghcr.io/rocketchat/rocket.chat.preview:pr-21484
        ports:
          - 3000:3000
        env:
          TEST_MODE: true
          OVERWRITE_SETTING_Show_Setup_Wizard: completed

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U selenium
        pip install pytest pytest-html
        pip install allure-pytest

    - name: Wait Rocket.Chat service
      run: |
        timeout 60 bash -c 'until $(curl --output /dev/null --silent --head --fail http://$0:$1); do printf '.'; sleep 5; done' localhost 3000
        docker logs "${{ job.services.rocketchat.id }}"

    - name: 'BrowserStack Env Setup'
      uses: 'browserstack/github-actions/setup-env@master'
      with:
        username: ${{ secrets.BROWSERSTACK_USERNAME }}
        access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        # build-name: BUILD_INFO
        # project-name: REPO_NAME

    - name: 'Start BrowserStackLocal Tunnel'
      uses: 'browserstack/github-actions/setup-local@master'
      with:
        local-testing: 'start'
        local-logging-level: 'all-logs'
        local-identifier: 'random'

    - name: Test
      env:
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        BROWSER: ${{ matrix.browser }}
      run: |
        cd ..
        cd QA.Automation
        pytest -v -s --alluredir="/tmp/reports/allure_reports" Tests

    - name: 'Stop BrowserStackLocal'
      uses: 'browserstack/github-actions/setup-local@master'
      with:
        local-testing: stop

    - name: Store Reports
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: Reports
        path: /tmp/reports

    - name: Store Screenshots
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: Screenshots
        path: /Screenshots
